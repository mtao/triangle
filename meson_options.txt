# By default, Triangle and Show Me use double precision floating point
#   numbers.  If you prefer single precision, use the -DSINGLE switch.
#   Double precision uses more memory, but improves the resolution of
#   the meshes you can generate with Triangle.  It also reduces the
#   likelihood of a floating exception due to overflow.  Also, it is
#   much faster than single precision on many architectures.  I recommend
#   double precision unless you want to generate a mesh for which you do
#   not have enough memory to use double precision.
option('single', type: 'boolean', value: false, description: 'Use single precision')

# If the size of the Triangle binary is important to you, you may wish to
#   generate a reduced version of Triangle.  The reduced option gets rid
#   of all features that are primarily of research interest.  Specifically,
#   it eliminates the -i, -F, -s, and -C switches.
#   The cdt_only option gets rid of all meshing algorithms above and beyond
#   constrained Delaunay triangulation.  Specifically, defining the option
#   eliminates the -r, -q, -a, -u, -D, -S, and -s switches
#   The REDUCED and CDT_ONLY symbols may be particularly attractive when
#   Triangle is called by another program that does not need all of Triangle's
#   features
option('reduced', type: 'boolean', value: false, description: 'Removes -i,-F,-s,-C switches')
option('cdt_only', type: 'boolean', value: false, description: 'Removes -r, -q,-a,-u,-D,-S,-s switches')
# If yours is not a Unix system, use the -DNO_TIMER switch to eliminate the
#   Unix-specific timer code.  Also, don't try to compile Show Me; it only
#   works with X Windows.
option('no_timer', type: 'boolean', value: false, description: 'Removes timer code')
# If you are modifying Triangle, I recommend using the -DSELF_CHECK switch
#   while you are debugging.  Defining the SELF_CHECK symbol causes
#   Triangle to include self-checking code.  Triangle will execute more
#   slowly, however, so be sure to remove this switch before compiling a
#   production version.
option('self_check', type: 'boolean', value: false, description: 'Include self-checking code')
